{
  "name": "sql-watch",
  "version": "0.0.1",
  "description": "Mono repo which contains code for sql-watch and sql-watch-lib",
  "keywords": [
    "Sql",
    "Postgresql",
    "migration",
    "migration tool",
    "Sql migration",
    "watch",
    "runner",
    "Sql runner",
    "bdd",
    "tdd",
    "fdd",
    "CI/CD",
    "test driven development",
    "behavior driven development",
    "feature driven development"
  ],
  "author": {
    "name": "Eric Hosick",
    "email": "erichosick@gmail.com",
    "url": "https://github.com/erichosick"
  },
  "contributors": [],
  "license": "MIT",
  "homepage": "https://github.com/erichosick/sql-watch",
  "bugs": {
    "url": "https://github.com/erichosick/sql-watch/issues",
    "email": "erichosick@gmail.com"
  },
  "private": true,
  "scripts": {
    "build": "yarn lerna run build",
    "build:watch": "yarn lerna run --parallel build:watch",
    "publish:all": "yarn test:integration && yarn build && yarn lerna publish",
    "test:integration": "yarn build && jest --config=./jest.integration.config.ts",
    "test:integration:watch": "jest --config=./jest.integration.config.ts --watch --coverage --collectCoverageFrom=\"./packages/**/src/*.ts\" --verbose --detectOpenHandles",
    "test:integration:watch:no-coverage": "jest --config=./jest.integration.config.ts --watch --verbose",
    "sql-watch": "set -o allexport; source .env; source .env.local; set +o allexport; node ./packages/sql-watch",
    "docker:up": "set -o allexport; source .env; source .env.local; set +o allexport; docker compose -f docker-compose.yml up",
    "docker:down": "set -o allexport; source .env; source .env.local; set +o allexport; docker compose -f docker-compose.yml down",
    "docker:build": "set -o allexport; source .env; source .env.local; set +o allexport; docker compose -f docker-compose.yml build",
    "docker:destroy": "yarn docker:down ; docker rmi $(docker images --filter \"reference=sql-watch*\" -q) -f; docker volume rm sql-watch_sqlwatch_testing_db_data",
    "lerna:create": "yarn lerna create -y",
    "tsc": "echo \"You probably don't want to run tsc at the root of this mono-repo. It creates maps and types for every ts file!\"",
    "upgrade:latest": "yarn lerna run yarn upgrade --latest"
  },
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "@types/jest": "^29.2.5",
    "@typescript-eslint/eslint-plugin": "^5.48.0",
    "@typescript-eslint/parser": "^5.48.0",
    "eslint": "^8.31.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^27.2.0",
    "jest": "^29.3.1",
    "lerna": "^6.3.0",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.4"
  }
}